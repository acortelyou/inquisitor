version: "3"

services:
  postgres:
    container_name: postgres
    image: postgres:9
    restart: unless-stopped
    volumes:
      - ${VOLUME_ROOT}/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  cachet:
    container_name: cachet
    image: cachethq/docker:latest
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - DB_DRIVER=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_PREFIX=chq_
      - APP_KEY=${CACHET_KEY}
      - APP_LOG=errorlog
      - DEBUG=false
      - VIRTUAL_PORT=8000
      - VIRTUAL_HOST=${CACHET_DOMAIN}
      - LETSENCRYPT_HOST=${CACHET_DOMAIN}
  cachet-monitor:
    container_name: cachet-monitor
    image: veekee/cachet-monitor:latest
    restart: unless-stopped
    depends_on:
      - cachet
    volumes:
      - ${VOLUME_ROOT}/cachet-monitor:/www/conf
  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:latest
    restart: unless-stopped
    depends_on:
      - cachet
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${VOLUME_ROOT}/nginx/conf.d:/etc/nginx/conf.d
      - ${VOLUME_ROOT}/nginx/vhost.d:/etc/nginx/vhost.d
      - ${VOLUME_ROOT}/nginx/certs:/etc/nginx/certs
      - ${VOLUME_ROOT}/nginx/dhparam:/etc/nginx/dhparam
      - ${VOLUME_ROOT}/nginx/html:/usr/share/nginx/html
  letsencrypt:
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime
      - ${VOLUME_ROOT}/nginx/vhost.d:/etc/nginx/vhost.d
      - ${VOLUME_ROOT}/nginx/certs:/etc/nginx/certs
      - ${VOLUME_ROOT}/nginx/dhparam:/etc/nginx/dhparam
  ddclient:
    container_name: ddclient
    image: linuxserver/ddclient:latest
    restart: unless-stopped
    depends_on:
      - letsencrypt
    volumes:
      - ${VOLUME_ROOT}/ddclient:/config
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: unless-stopped
    depends_on:
      - ddclient
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
